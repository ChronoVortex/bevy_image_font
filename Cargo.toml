[package]
name = "bevy_image_font"
version = "0.6.0"
edition = "2021"
authors = [
    "Ash <ext0l@catgirl.ai>",
    "Alexander Krivács Schrøder <alexschrod@gmail.com>",
]
categories = ["game-development"]
description = "Render pixel fonts from PNGs in Bevy."
keywords = ["gamedev", "bevy"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/ilyvion/bevy_image_font"

[features]
default = ["ui", "rendered", "atlas_sprites"]
atlas_sprites = []
gizmos = ["bevy/bevy_gizmos"]
rendered = ["dep:image"]
ui = ["rendered", "bevy/bevy_ui"]

[dependencies]
bevy = { version = "0.15", default-features = false, features = [
    "bevy_asset",
    "bevy_render",
    "bevy_sprite",
] }
bevy_image = "0.15"
derive_setters = "0.1.6"
ron = "0.8.1"
serde = { version = "1.0.197", features = ["derive"] }
thiserror = "1.0.58"

[dependencies.image]
version = "0.24.9"
default-features = false
features = ["png"]
optional = true

[dev-dependencies]
bevy = { version = "0.15", default-features = false, features = [
    "bevy_asset",
    "bevy_render",
    "bevy_sprite",
    "bevy_core_pipeline",
    "bevy_window",
    "multi_threaded",
    "png",
    "x11",
] }
bevy_asset_loader = { version = "0.22.0", features = ["2d"] }

[[example]]
name = "rendered_ui"
required-features = ["rendered", "ui"]

[[example]]
name = "rendered_sprite"
required-features = ["rendered"]

[[example]]
name = "atlased_sprite"
required-features = ["atlas_sprites"]

[lints.rust]
absolute_paths_not_starting_with_crate = "warn"
ambiguous_negative_literals = "warn"
deprecated_safe_2024 = "warn"
edition_2024_expr_fragment_specifier = "warn"
#elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
ffi_unwind_calls = "warn"
if_let_rescope = "warn"
impl_trait_overcaptures = "warn"
keyword-idents = "warn"
keyword_idents_2018 = "warn"
keyword_idents_2024 = "warn"
let_underscore_drop = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
# missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
missing_unsafe_on_extern = "warn"
non_ascii_idents = "warn"
# redundant_imports = "warn"
redundant_lifetimes = "warn"
rust_2021_incompatible_closure_captures = "warn"
rust_2021_incompatible_or_patterns = "warn"
rust_2021_prefixes_incompatible_syntax = "warn"
rust_2021_prelude_collisions = "warn"
rust_2024_guarded_string_incompatible_syntax = "warn"
rust_2024_incompatible_pat = "warn"
rust_2024_prelude_collisions = "warn"
single_use_lifetimes = "warn"
#tail_expr_drop_order = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unnameable_types = "warn"
unreachable_pub = "warn"
unsafe_attr_outside_unsafe = "warn"
unsafe_code = "warn"
unsafe_op_in_unsafe_fn = "warn"
unstable_features = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
#unused_results = "warn"
variant_size_differences = "warn"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
needless_pass_by_value = "allow"

[package.metadata.docs.rs]
# document all features
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
