searchState.loadedDescShard("bevy_image_font", 0, "<code>bevy_image_font</code>\nAn image font as well as the mapping of characters to …\nA Bevy plugin for rendering image-based fonts.\nSystem set for systems related to <code>ImageFontPlugin</code>.\nText rendered using an <code>ImageFont</code>.\nThe glyph used to render <code>c</code> is contained in the part of the …\nThe layout of the texture atlas, describing the …\nThis module provides functionality for rendering text as …\nSets the <code>font</code> field of this struct.\nThe handle to the <code>ImageFont</code> used to render this text. The …\nSets the <code>font_height</code> field of this struct.\nIf set, overrides the height the font is rendered at. This …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nThe <code>ImageSampler</code> to use during font image rendering. The …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCode for parsing an <code>ImageFont</code> off of an on-disk …\nThis module provides functionality for rendering text as …\nMarks any text where the underlying <code>ImageFont</code> asset has …\nSets the <code>text</code> field of this struct.\nThe string of text to be rendered. Each character in the …\nThe image that contains the font glyphs. Each glyph is a …\nDebugging data for visualizing an <code>ImageFontSpriteText</code> in a …\nText rendered using an <code>ImageFont</code> as individual sprites.\nSets the <code>anchor</code> field of this struct.\nThe alignment point of the text relative to its position. …\nSets the <code>color</code> field of this struct.\nThe color applied to the rendered text. This color affects …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRenders gizmos for debugging <code>ImageFontText</code> and its …\nSystem that renders each <code>ImageFontText</code> as child <code>Sprite</code> …\nInterprets the string as a “grid” and slices up the …\nThe image path provided in the settings is empty. This …\nThe layout string used for automatic character placement …\nHuman-readable way to specify where the characters in an …\nErrors that can show up during loading.\nLoader for <code>ImageFont</code>s.\nConfiguration settings for the <code>ImageFontLoader</code>.\nOn-disk representation of an <code>ImageFont</code>, optimized to make …\nAn I/O error occurred while loading the image font. This …\nFailed to load an asset directly. This is usually caused …\nFully specifies the bounds of each character. The most …\nManually specifies the top-left position of each …\nThe path provided for the font’s image was not loaded as …\nParsing the on-disk representation of the font failed. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nThe path to the image file containing the font glyphs, …\nThe <code>ImageSampler</code> to use during font image rendering. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe layout description of the font, specifying how …\nProcesses the asset in an asynchronous closure.\nValidates the <code>ImageFontSettings</code> struct to ensure all …\nA mapping from characters to their top-left positions …\nThe size of each character, specified as a uniform width …\nFailed to copy a character from the source font image …\nThe image could not be converted to a <code>DynamicImage</code>. This …\nA component for displaying in-world text that has been …\nA component for displaying UI text that has been …\nErrors that can occur during the rendering of an <code>ImageFont</code>.\nThe <code>ImageFont</code> asset required for rendering was not loaded. …\nThe texture asset associated with the <code>ImageFont</code> was not …\nAn unspecified internal error occurred during rendering. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using <code>default()</code>.\nCreates <code>Self</code> using <code>default()</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSystem that renders each <code>ImageFontText</code> into its <code>ImageNode</code>. …\nSystem that renders each <code>ImageFontText</code> into its <code>Sprite</code>. …")